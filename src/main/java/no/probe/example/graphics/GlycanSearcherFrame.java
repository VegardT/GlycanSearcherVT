package no.probe.example.graphics;

import com.compomics.util.gui.spectrum.ReferenceArea;
import com.compomics.util.gui.spectrum.SpectrumPanel;
import edu.uci.ics.jung.algorithms.layout.FRLayout;
import edu.uci.ics.jung.graph.UndirectedSparseGraph;
import edu.uci.ics.jung.visualization.VisualizationViewer;
import edu.uci.ics.jung.visualization.control.DefaultModalGraphMouse;
import edu.uci.ics.jung.visualization.control.ModalGraphMouse;
import edu.uci.ics.jung.visualization.picking.PickedState;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.Map.Entry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import no.probe.example.calculation.ExtensiveGlycanSearch;
import no.probe.example.calculation.GlycanSearch;
import no.probe.example.calculation.Graph;
import no.probe.example.data.FileData;
import no.probe.example.data.GlycanData;
import no.probe.example.data.GlycanSearcherUtilities;
import no.probe.example.data.GraphOutputSearch;
import no.probe.example.data.HexHexNacSearch;
import no.probe.example.data.OutputSearchData;
import no.probe.example.graphics.components.GlycanTableModel;
import no.probe.example.graphics.components.SaccharideTableModel;
import org.apache.commons.collections15.Transformer;
import org.apache.commons.math.linear.MatrixUtils;
import org.apache.commons.math.linear.RealMatrix;
import org.jgrapht.DirectedGraph;
import uk.ac.ebi.jmzml.xml.io.MzMLUnmarshallerException;

/**
 *
 * @author Probe
 */
public class GlycanSearcherFrame extends javax.swing.JFrame {
    
    public static String fileName;
    public static File selectedFile;
    
    private boolean showVertexInfo;
    
    public static double minValue;
    public static double maxValue;
    public static double sensitivity;
    public static double threshold;
    public static ArrayList<double[][]> spectraList;
    private ArrayList<String> selectedNodes = new ArrayList();

    /**
     * Creates new form GlycanSearcherFrame
     */
    public GlycanSearcherFrame() {
        initComponents();
        displayResults();
        setLocationRelativeTo(null);
    }
    
    public void displayResults() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        spectraPanel = new javax.swing.JPanel();
        graphPanel1 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        specField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        glycoField = new javax.swing.JTextField();
        GalField = new javax.swing.JTextField();
        GlcField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        minBox = new javax.swing.JComboBox();
        sensitivityBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        thresholdBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        fField = new javax.swing.JTextField();
        fileJLabal = new javax.swing.JLabel();
        open = new javax.swing.JButton();
        maxBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        findGlycanButton = new javax.swing.JButton();
        saccharideListBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        infoBox = new java.awt.Checkbox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GlycanSearcherVT");

        jToggleButton1.setText("Close");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        spectraPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Spectra"));
        spectraPanel.setMinimumSize(new java.awt.Dimension(12, 150));
        spectraPanel.setLayout(new javax.swing.BoxLayout(spectraPanel, javax.swing.BoxLayout.LINE_AXIS));

        graphPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Graph"));
        graphPanel1.setLayout(new javax.swing.BoxLayout(graphPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dataset Properties"));

        jTable2.setModel(new SaccharideTableModel()

        );
        jScrollPane3.setViewportView(jTable2);

        specField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("Nr of spectra in file");

        jLabel6.setText("Nr of glycan spectra");

        jLabel8.setText("Nr of GalNAc");

        jLabel9.setText("Nr of GlcNAc");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(specField, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(glycoField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(GlcField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(60, 60, 60)
                        .addComponent(GalField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(64, 64, 64)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(specField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(glycoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(GlcField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Input and Settings"));

        minBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "100", "200", "300" }));

        sensitivityBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.01", "0.02", "0.03", "0.04", "0.05", "0.06", "0.07", "0.08", "0.09", "0.1", "10.0","0.001" }));
        sensitivityBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sensitivityBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("MAX search value");

        jLabel4.setText("Sensitivity");

        thresholdBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "5", "10", "20","50","100","500","1000","5000","10000" }));
        thresholdBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("MIN search value");

        fField.setEditable(false);
        fField.setText("Please select a file");

        fileJLabal.setText("File:");

        open.setText("open");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        maxBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"20000", "10000 ", "1400", "1200", "800", "600" }));

        jLabel5.setText("Intensity Threshold");

        findGlycanButton.setText("Find Glycan");
        findGlycanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    findGlycanButtonActionPerformed(evt);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        });

        saccharideListBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Standard",  "Tagged", }));

        jLabel7.setText("Ion Search List");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(minBox, 0, 302, Short.MAX_VALUE)
                            .addComponent(maxBox, 0, 1, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(sensitivityBox, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addGap(5, 5, 5)
                                .addComponent(thresholdBox, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(saccharideListBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 341, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(findGlycanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fileJLabal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(open, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(open)
                    .addComponent(fileJLabal)
                    .addComponent(fField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(sensitivityBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thresholdBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(maxBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findGlycanButton)
                    .addComponent(saccharideListBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Spectra properties"));

        table.setModel(new GlycanTableModel());
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableMouseReleased(evt);
            }
        });
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(table);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );

        infoBox.setLabel("Graph Information");

        jButton1.setText("Clear Button");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1))
                    .addComponent(spectraPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(graphPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(infoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(graphPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(spectraPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void findGlycanButtonActionPerformed(java.awt.event.ActionEvent evt) throws InterruptedException {//GEN-FIRST:event_findGlycanButtonActionPerformed

        //Variables
        ArrayList<String> hexNAcInformation = new ArrayList();
        
        double massMax = GlycanData.getMassMax();
        threshold = Double.parseDouble(thresholdBox.getSelectedItem().toString());
        sensitivity = Double.parseDouble(sensitivityBox.getSelectedItem().toString()); //search parameter
        maxValue = Double.parseDouble(maxBox.getSelectedItem().toString());
        minValue = Double.parseDouble(minBox.getSelectedItem().toString()); //search parameter
        LinkedHashMap<String, Double> glycanMap = null;
        
        String saccharideList = saccharideListBox.getSelectedItem().toString();
        if (saccharideList.equals("Normal")) {
            glycanMap = GlycanData.getMassGalMap();
        } else if (saccharideList.equals("Tagged")) {
            glycanMap = GlycanData.GetTaggedOxoniumIons();
        }
        
        try {
            
            ExtensiveGlycanSearch extensiveGlycanSearch = new ExtensiveGlycanSearch();
            OutputSearchData searchResults = new OutputSearchData();
            FileData getData = new FileData();
            GlycanSearch glycanSearch = new GlycanSearch();
            
            spectraList = getData.GetSpectra(selectedFile, fileName, threshold);
            String nrOFglycoSpectra = Integer.toString(spectraList.size());
            glycoField.setText(nrOFglycoSpectra);
            specField.setText(Integer.toString(getData.nrOfSpectra));
            
            HashMap<String, Integer> galNacGlcNacMap = HexHexNacSearch.galNacGlcNacMap;
     
            for (Entry<String, Integer> e : galNacGlcNacMap.entrySet()) {
                Integer value = e.getValue();
                hexNAcInformation.add(value.toString());
                
            }
            
            GalField.setText(hexNAcInformation.get(1));
            GlcField.setText(hexNAcInformation.get(0));
            
            LinkedHashMap<Double, Integer> runSearch = glycanSearch.runSearch(spectraList, massMax, glycanMap, saccharideList);

            //SearchResults for glycanSarch
            searchResults.OutputSearchData(runSearch, glycanMap);
            ArrayList<Integer> hitsDifference = searchResults.GetHitsDifference();
            ArrayList<String> names = searchResults.GetNames();
            ArrayList<Double> saccharideMasses = searchResults.GetSaccharideMasses();
            ArrayList<Double> percentHits = searchResults.GetPercentHits();

            //Display result for glycanSearch
            SaccharideTableModel saccharideTableModel = new SaccharideTableModel(hitsDifference, names, saccharideMasses, percentHits);
            jTable2.setModel(saccharideTableModel);
            saccharideTableModel.fireTableDataChanged();

            //Search and build graphs
            extensiveGlycanSearch.search(spectraList, glycanMap);

            //SearchResults for ExtensiveGlycanSarch
            GlycanTableModel glycanTableModel = new GlycanTableModel(spectraList);
            table.setModel(glycanTableModel);
            glycanTableModel.fireTableDataChanged();

        } catch (IOException ex) {
            Logger.getLogger(GlycanSearcherFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MzMLUnmarshallerException ex) {
            Logger.getLogger(GlycanSearcherFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GlycanSearcherFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_findGlycanButtonActionPerformed

    private void sensitivityBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sensitivityBoxActionPerformed

    }//GEN-LAST:event_sensitivityBoxActionPerformed

    private void thresholdBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_thresholdBoxActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // Loads file and reutrns an ArrayList containing the spectra

        JFileChooser chooser = new JFileChooser();
        
        int returnVal = chooser.showOpenDialog(null);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            
            selectedFile = chooser.getSelectedFile();
            String filepath = chooser.getName(selectedFile);
            fField.setText(filepath);
            
            fileName = selectedFile.getName();
            System.out.println(fileName);
            
        }
    }//GEN-LAST:event_openActionPerformed

    private void tableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseReleased

        infoBox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                
                if (e.getStateChange() == ItemEvent.SELECTED) {//checkbox has been selected
                    showVertexInfo = true;
                    
                } else {//checkbox has been deselected
                    showVertexInfo = false;
                    
                };
            }
        });
        
        selectedNodes.clear();
        GraphOutputSearch getGraphs = new GraphOutputSearch();
        
        ArrayList<DirectedGraph<String, Graph.GlycoEdge>> graphs = getGraphs.GetGlycanGraph();
        GlycanSearcherUtilities check = new GlycanSearcherUtilities();
        
        final GlycoReferenceAreas reference = new GlycoReferenceAreas();
        
        ArrayList<double[][]> spectra = new ArrayList();
        
        int selectedRow = table.getSelectedRow();
        for (double[][] i : spectraList) {// Fetching the mass values from the the hashmap

            spectra.add(i);
        }
        
        double[][] s = spectra.get(selectedRow);
        RealMatrix matrix = MatrixUtils.createRealMatrix(s);
        double[] intensity = matrix.getRow(1);
        double[] mz = matrix.getRow(0);
        
        final SpectrumPanel spectrumPanel = new SpectrumPanel(mz, intensity, 0.0, "2", "fileName", 50, false, false, false, 2, false);
        spectrumPanel.setAnnotations(null);
        
        DirectedGraph<String, Graph.GlycoEdge> graph = graphs.get(selectedRow);
        
        UndirectedSparseGraph visualisationGraph = check.TranslateDirectGraph(graph);
        
        VisualizationViewer<String, String> vv = new VisualizationViewer<String, String>(new FRLayout<String, String>(visualisationGraph),
                new Dimension(graphPanel1.getWidth() - 20, graphPanel1.getHeight() - 100));
        vv.setBackground(Color.WHITE);


        //         set the vertex label transformer
        if (showVertexInfo == true) {
            vv.getRenderContext().setVertexLabelTransformer(new Transformer<String, String>() {
                @Override
                public String transform(String arg0) {
                    return arg0;
                }
            });
            
        }


        //         set the vertex renderer
        vv.getRenderer().setVertexRenderer(new ProteinInferenceVertexRenderer());

        //         set the mouse interaction mode
        final DefaultModalGraphMouse<String, Number> graphMouse = new DefaultModalGraphMouse<String, Number>();
        graphMouse.setMode(ModalGraphMouse.Mode.PICKING);
        vv.setGraphMouse(graphMouse);

        //         attach the listener that will print when the vertices selection changes
        graphPanel1.removeAll();
        
        graphPanel1.add(vv);
        
        graphPanel1.revalidate();
        
        graphPanel1.repaint();
        spectraPanel.removeAll();
        
        spectraPanel.add(spectrumPanel);
        
        spectraPanel.validate();
        
        spectraPanel.repaint();
        
        final PickedState<String> pickedState = vv.getPickedVertexState();
        pickedState.addItemListener(
                new ItemListener() {
                    
                    @Override
                    public void itemStateChanged(ItemEvent e) {
                        Object subject = e.getItem();
                        if (subject instanceof String) {
                            String vertex = (String) subject;
                            if (pickedState.isPicked(vertex)) {
                                
                                if (!selectedNodes.contains(vertex)) {
                                    selectedNodes.add(vertex);
                                }
                            } else {
                                
                                selectedNodes.remove(vertex);
                            }
                        }
                        
                        HashSet glycoReferenceList = reference.GlycoReferencePickedVertexes(selectedNodes);
                        for (Object referenceArea : glycoReferenceList) {
                            
                            spectrumPanel.addReferenceAreaXAxis((ReferenceArea) referenceArea);
                            
                        }
                        
                        spectraPanel.removeAll();
                        
                        spectraPanel.add(spectrumPanel);
                        
                        spectraPanel.validate();
                        
                        spectraPanel.repaint();
                    }
                }
        );

    }//GEN-LAST:event_tableMouseReleased

    private void tableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyReleased
        tableMouseReleased(null);
    }//GEN-LAST:event_tableKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SaccharideTableModel saccharideTableModel = new SaccharideTableModel();
        jTable2.setModel(saccharideTableModel);
        saccharideTableModel.fireTableDataChanged();
        glycoField.setText("");
        specField.setText("");

        //Search and build graphs
        //SearchResults for ExtensiveGlycanSarch
        GlycanTableModel glycanTableModel = new GlycanTableModel();
        table.setModel(glycanTableModel);
        glycanTableModel.fireTableDataChanged();
        GraphOutputSearch getGraphs = new GraphOutputSearch();
        
        ArrayList<DirectedGraph<String, Graph.GlycoEdge>> graphs = getGraphs.GetGlycanGraph();
        graphs.clear();
        
        spectraPanel.removeAll();
        spectraPanel.repaint();
        graphPanel1.removeAll();
        graphPanel1.repaint();
        

    }//GEN-LAST:event_jButton1ActionPerformed
    

    private void specFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlycanSearcherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlycanSearcherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlycanSearcherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlycanSearcherFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GlycanSearcherFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField GalField;
    private javax.swing.JTextField GlcField;
    private javax.swing.JTextField fField;
    private javax.swing.JLabel fileJLabal;
    private javax.swing.JButton findGlycanButton;
    private javax.swing.JTextField glycoField;
    private javax.swing.JPanel graphPanel1;
    private java.awt.Checkbox infoBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JComboBox maxBox;
    private javax.swing.JComboBox minBox;
    private javax.swing.JButton open;
    private javax.swing.JComboBox saccharideListBox;
    private javax.swing.JComboBox sensitivityBox;
    private javax.swing.JTextField specField;
    private javax.swing.JPanel spectraPanel;
    private javax.swing.JTable table;
    private javax.swing.JComboBox thresholdBox;
    // End of variables declaration//GEN-END:variables
}
